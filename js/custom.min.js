$(function(){"use strict";var i=window.matchMedia("(max-width: 500px)"),s=window.matchMedia("(min-width: 500px) and (max-width: 992px)");function t(t){i.matches?$("#my-slider").sliderPro({width:500,height:700,arrows:!0,buttons:!1,shuffle:!0,smallSize:500,mediumSize:1e3,largeSize:3e3,autoplay:!1}):s.matches?$("#my-slider").sliderPro({width:"100%",height:675,arrows:!0,buttons:!1,shuffle:!0,smallSize:500,mediumSize:1e3,largeSize:3e3,autoplay:!1}):$("#my-slider").sliderPro({width:1200,height:600,arrows:!0,buttons:!1,shuffle:!0,smallSize:500,mediumSize:1e3,largeSize:3e3,autoplay:!1})}t(),t(),i.addListener(t),s.addListener(t);var e=window.matchMedia("(min-width: 1200px)");if(e.addListener(t),e.matches?$(".gallery__image").each(function(){$(this).attr("src",this.dataset.galleryImageWide)}):$(".gallery__image").each(function(){$(this).attr("src",this.dataset.galleryImageSmall)}),$(".header__menu-icon").click(function(){$(this).toggleClass("header__menu-icon_opened"),$(".menu__list").toggleClass("menu__list_open")}),!!document.createElement("audio").canPlayType){var n=0,o=!1,h=[{track:1,name:"Betty Who - Right Here",length:"03:59",file:"Betty_Who_Right_Here"},{track:2,name:"Holley Maher - Always Be",length:"03:51",file:"HolleyMaher"},{track:3,name:"Betty Who - Right Here",length:"03:59",file:"Betty_Who_Right_Here"},{track:4,name:"Holley Maher - Always Be",length:"03:51",file:"HolleyMaher"},{track:5,name:"Holley Maher - Always Be",length:"03:51",file:"HolleyMaher"}],a=h.length,r=$(".audio-container__track-player").prop("volume",.5).on("play",function(){o=!0}).on("pause",function(){o=!1}).on("ended",function(){n+1<a?(d(++n),r.play()):(r.pause(),d(n=0))}).get(0),d=($(".audio-container__btn.btn-prev").click(function(){d(0<=n-1?--n:n=a-1),o&&r.play()}),$(".audio-container__btn.btn-next").click(function(){n+1<a?(d(++n),o&&r.play()):(r.pause(),d(n=0))}),$(".audio-container__btn.btn-play").click(function(){o?r.pause():r.play()}),$(".audio-container__track-item").click(function(){var t=parseInt($(this).index());t!==n&&l(t)}),function(t){$(".audio-container__track-item").removeClass("audio-container__track-item_active"),$(".audio-container__track-list .audio-container__track-item:eq("+t+")").addClass("audio-container__track-item_active"),n=t,r.src="music/"+h[t].file+".mp3"}),l=function(t){d(t),r.play()};d(n)}var u="http://192.168.0.103:3000/";$(".menu__link").each(function(){this.href==window.location.href?$(this).addClass("menu__link_current"):window.location.href==u+"portfolio__oksanka&volodymyr.html"?$('.menu__link[href = "portfolio.html"]').addClass("menu__link_current"):window.location.href==u+"wanderlust__mountain.html"?$('.menu__link[href = "wanderlust.html"]').addClass("menu__link_current"):console.log("page name not found")})}),function(c,g){"use strict";g.SliderPro={modules:[],addModule:function(t,i){this.modules.push(t),g.extend(o.prototype,i)}};var p=g.SliderPro.namespace="SliderPro",o=function(t,i){this.instance=t,this.$slider=g(this.instance),this.$slides=null,this.$slidesMask=null,this.$slidesContainer=null,this.slides=[],this.slidesOrder=[],this.options=i,this.settings={},this.originalSettings={},this.originalGotoSlide=null,this.selectedSlideIndex=0,this.previousSlideIndex=0,this.middleSlidePosition=0,this.supportedAnimation=null,this.vendorPrefix=null,this.transitionEvent=null,this.positionProperty=null,this.sizeProperty=null,this.isIE=null,this.slidesPosition=0,this.slidesSize=0,this.averageSlideSize=0,this.slideWidth=0,this.slideHeight=0,this.previousSlideWidth=0,this.previousSlideHeight=0,this.previousWindowWidth=0,this.previousWindowHeight=0,this.allowResize=!0,this.uniqueId=(new Date).valueOf(),this.breakpoints=[],this.currentBreakpoint=-1,this.shuffledIndexes=[],this._init()};o.prototype={_init:function(){var s=this;this.supportedAnimation=f.getSupportedAnimation(),this.vendorPrefix=f.getVendorPrefix(),this.transitionEvent=f.getTransitionEvent(),this.isIE=f.checkIE(),this.$slider.removeClass("sp-no-js"),c.navigator.userAgent.match(/(iPad|iPhone|iPod)/g)&&this.$slider.addClass("ios");var t=/(msie) ([\w.]+)/.exec(c.navigator.userAgent.toLowerCase());this.isIE&&this.$slider.addClass("ie"),null!==t&&this.$slider.addClass("ie"+parseInt(t[2],10)),this.$slidesContainer=g('<div class="sp-slides-container"></div>').appendTo(this.$slider),this.$slidesMask=g('<div class="sp-mask"></div>').appendTo(this.$slidesContainer),this.$slides=this.$slider.find(".sp-slides").appendTo(this.$slidesMask),this.$slider.find(".sp-slide").appendTo(this.$slides);var i=g.SliderPro.modules;if(void 0!==i)for(var e=0;e<i.length;e++){var n=i[e].substring(0,1).toLowerCase()+i[e].substring(1)+"Defaults";void 0!==this[n]&&g.extend(this.defaults,this[n])}if(this.settings=g.extend({},this.defaults,this.options),void 0!==i)for(var o=0;o<i.length;o++)void 0!==this["init"+i[o]]&&this["init"+i[o]]();if(this.originalSettings=g.extend({},this.settings),this.originalGotoSlide=this.gotoSlide,null!==this.settings.breakpoints){for(var h in this.settings.breakpoints)this.breakpoints.push({size:parseInt(h,10),properties:this.settings.breakpoints[h]});this.breakpoints=this.breakpoints.sort(function(t,i){return t.size>=i.size?1:-1})}if(this.selectedSlideIndex=this.settings.startSlide,!0===this.settings.shuffle){var a=this.$slides.find(".sp-slide"),r=[];a.each(function(t){s.shuffledIndexes.push(t)});for(var d=this.shuffledIndexes.length-1;0<d;d--){var l=Math.floor(Math.random()*(d+1)),u=this.shuffledIndexes[d];this.shuffledIndexes[d]=this.shuffledIndexes[l],this.shuffledIndexes[l]=u}g.each(this.shuffledIndexes,function(t,i){r.push(a[i])}),this.$slides.empty().append(r)}g(c).on("resize."+this.uniqueId+"."+p,function(){var t=g(c).width(),i=g(c).height();!1===s.allowResize||s.previousWindowWidth===t&&s.previousWindowHeight===i||(s.previousWindowWidth=t,s.previousWindowHeight=i,s.allowResize=!1,setTimeout(function(){s.resize(),s.allowResize=!0},200))}),this.on("update."+p,function(){s.previousSlideWidth=0,s.resize()}),this.update(),this.$slides.find(".sp-slide").eq(this.selectedSlideIndex).addClass("sp-selected"),this.trigger({type:"init"}),g.isFunction(this.settings.init)&&this.settings.init.call(this,{type:"init"})},update:function(){var s=this;"horizontal"===this.settings.orientation?(this.$slider.removeClass("sp-vertical").addClass("sp-horizontal"),this.$slider.css({height:"","max-height":""}),this.$slides.find(".sp-slide").css("top","")):"vertical"===this.settings.orientation&&(this.$slider.removeClass("sp-horizontal").addClass("sp-vertical"),this.$slides.find(".sp-slide").css("left","")),!0===this.settings.rightToLeft?this.$slider.addClass("sp-rtl"):this.$slider.removeClass("sp-rtl"),this.positionProperty="horizontal"===this.settings.orientation?"left":"top",this.sizeProperty="horizontal"===this.settings.orientation?"width":"height",this.gotoSlide=this.originalGotoSlide;for(var t=this.slides.length-1;0<=t;t--)if(0===this.$slider.find('.sp-slide[data-index="'+t+'"]').length){var i=this.slides[t];i.off("imagesLoaded."+p),i.destroy(),this.slides.splice(t,1)}this.slidesOrder.length=0,this.$slider.find(".sp-slide").each(function(t){var i=g(this);void 0===i.attr("data-init")?s._createSlide(t,i):s.slides[t].setIndex(t),s.slidesOrder.push(t)}),this.middleSlidePosition=parseInt((s.slidesOrder.length-1)/2,10),!0===this.settings.loop&&this._updateSlidesOrder(),this.trigger({type:"update"}),g.isFunction(this.settings.update)&&this.settings.update.call(this,{type:"update"})},_createSlide:function(t,i){var s=this,e=new n(g(i),t,this.settings);this.slides.splice(t,0,e),e.on("imagesLoaded."+p,function(t){!0===s.settings.autoSlideSize&&(!1===s.$slides.hasClass("sp-animated")&&s._resetSlidesPosition(),s._calculateSlidesSize()),!0===s.settings.autoHeight&&t.index===s.selectedSlideIndex&&s._resizeHeightTo(e.getSize().height)})},_updateSlidesOrder:function(){var t,i,s=g.inArray(this.selectedSlideIndex,this.slidesOrder)-this.middleSlidePosition;if(s<0)for(i=(t=this.slidesOrder.splice(s,Math.abs(s))).length-1;0<=i;i--)this.slidesOrder.unshift(t[i]);else if(0<s)for(t=this.slidesOrder.splice(0,s),i=0;i<=t.length-1;i++)this.slidesOrder.push(t[i])},_updateSlidesPosition:function(){var t,i,s,e,n,o=parseInt(this.$slides.find(".sp-slide").eq(this.selectedSlideIndex).css(this.positionProperty),10),h=o;if(!0===this.settings.autoSlideSize)if(!0===this.settings.rightToLeft&&"horizontal"===this.settings.orientation){for(s=this.middleSlidePosition;0<=s;s--)(i=(t=this.getSlideAt(this.slidesOrder[s])).$slide).css(this.positionProperty,h),h=parseInt(i.css(this.positionProperty),10)+t.getSize()[this.sizeProperty]+this.settings.slideDistance;for(h=o,s=this.middleSlidePosition+1;s<this.slidesOrder.length;s++)(i=(t=this.getSlideAt(this.slidesOrder[s])).$slide).css(this.positionProperty,h-(t.getSize()[this.sizeProperty]+this.settings.slideDistance)),h=parseInt(i.css(this.positionProperty),10)}else{for(s=this.middleSlidePosition-1;0<=s;s--)(i=(t=this.getSlideAt(this.slidesOrder[s])).$slide).css(this.positionProperty,h-(t.getSize()[this.sizeProperty]+this.settings.slideDistance)),h=parseInt(i.css(this.positionProperty),10);for(h=o,s=this.middleSlidePosition;s<this.slidesOrder.length;s++)(i=(t=this.getSlideAt(this.slidesOrder[s])).$slide).css(this.positionProperty,h),h=parseInt(i.css(this.positionProperty),10)+t.getSize()[this.sizeProperty]+this.settings.slideDistance}else for(e=!0===this.settings.rightToLeft&&"horizontal"===this.settings.orientation?-1:1,n="horizontal"===this.settings.orientation?this.slideWidth:this.slideHeight,s=0;s<this.slidesOrder.length;s++)(i=this.$slides.find(".sp-slide").eq(this.slidesOrder[s])).css(this.positionProperty,o+e*(s-this.middleSlidePosition)*(n+this.settings.slideDistance))},_resetSlidesPosition:function(){var t,i,s,e,n,o,h=0;if(!0===this.settings.autoSlideSize){if(!0===this.settings.rightToLeft&&"horizontal"===this.settings.orientation)for(s=0;s<this.slidesOrder.length;s++)(i=(t=this.getSlideAt(this.slidesOrder[s])).$slide).css(this.positionProperty,h-(t.getSize()[this.sizeProperty]+this.settings.slideDistance)),h=parseInt(i.css(this.positionProperty),10);else for(s=0;s<this.slidesOrder.length;s++)(i=(t=this.getSlideAt(this.slidesOrder[s])).$slide).css(this.positionProperty,h),h=parseInt(i.css(this.positionProperty),10)+t.getSize()[this.sizeProperty]+this.settings.slideDistance;e=this.getSlideAt(this.selectedSlideIndex).getSize()[this.sizeProperty]}else{for(n=!0==(!0===this.settings.rightToLeft&&"horizontal"===this.settings.orientation)?-1:1,o="horizontal"===this.settings.orientation?this.slideWidth:this.slideHeight,s=0;s<this.slidesOrder.length;s++)(i=this.$slides.find(".sp-slide").eq(this.slidesOrder[s])).css(this.positionProperty,n*s*(o+this.settings.slideDistance));e=o}var a=!0===this.settings.centerSelectedSlide?Math.round((parseInt(this.$slidesMask.css(this.sizeProperty),10)-e)/2):0,r=-parseInt(this.$slides.find(".sp-slide").eq(this.selectedSlideIndex).css(this.positionProperty),10)+a;this._moveTo(r,!0)},_calculateSlidesSize:function(){if(!0===this.settings.autoSlideSize){var t=this.$slides.find(".sp-slide").eq(this.slidesOrder[0]),i=parseInt(t.css(this.positionProperty),10),s=this.$slides.find(".sp-slide").eq(this.slidesOrder[this.slidesOrder.length-1]),e=parseInt(s.css(this.positionProperty),10)+(!0===this.settings.rightToLeft&&"horizontal"===this.settings.orientation?-1:1)*parseInt(s.css(this.sizeProperty),10);this.slidesSize=Math.abs(e-i),this.averageSlideSize=Math.round(this.slidesSize/this.slides.length)}else this.slidesSize=(("horizontal"===this.settings.orientation?this.slideWidth:this.slideHeight)+this.settings.slideDistance)*this.slides.length-this.settings.slideDistance,this.averageSlideSize="horizontal"===this.settings.orientation?this.slideWidth:this.slideHeight},resize:function(){var t=this;if(null!==this.settings.breakpoints&&0<this.breakpoints.length)if(g(c).width()>this.breakpoints[this.breakpoints.length-1].size&&-1!==this.currentBreakpoint)this.currentBreakpoint=-1,this._setProperties(this.originalSettings,!1);else for(var i=0,s=this.breakpoints.length;i<s;i++)if(g(c).width()<=this.breakpoints[i].size){if(this.currentBreakpoint!==this.breakpoints[i].size){var e={type:"breakpointReach",size:this.breakpoints[i].size,settings:this.breakpoints[i].properties};this.trigger(e),g.isFunction(this.settings.breakpointReach)&&this.settings.breakpointReach.call(this,e),this.currentBreakpoint=this.breakpoints[i].size;var n=g.extend({},this.originalSettings,this.breakpoints[i].properties);return void this._setProperties(n,!1)}break}!0===this.settings.responsive?"fullWidth"!==this.settings.forceSize&&"fullWindow"!==this.settings.forceSize||"auto"!==this.settings.visibleSize&&("auto"===this.settings.visibleSize||"vertical"!==this.settings.orientation)?this.$slider.css({width:"100%","max-width":this.settings.width,marginLeft:""}):(this.$slider.css("margin",0),this.$slider.css({width:g(c).width(),"max-width":"",marginLeft:-this.$slider.offset().left})):this.$slider.css({width:this.settings.width}),-1===this.settings.aspectRatio&&(this.settings.aspectRatio=this.settings.width/this.settings.height),this.slideWidth=this.$slider.width(),"fullWindow"===this.settings.forceSize?this.slideHeight=g(c).height():this.slideHeight=isNaN(this.settings.aspectRatio)?this.settings.height:this.slideWidth/this.settings.aspectRatio,(this.previousSlideWidth!==this.slideWidth||this.previousSlideHeight!==this.slideHeight||"auto"!==this.settings.visibleSize||this.$slider.outerWidth()>this.$slider.parent().width()||this.$slider.width()!==this.$slidesMask.width())&&(this.previousSlideWidth=this.slideWidth,this.previousSlideHeight=this.slideHeight,this._resizeSlides(),this.$slidesMask.css({width:this.slideWidth,height:this.slideHeight}),!0===this.settings.autoHeight?setTimeout(function(){t._resizeHeight()},1):this.$slidesMask.css(this.vendorPrefix+"transition",""),"auto"!==this.settings.visibleSize&&("horizontal"===this.settings.orientation?("fullWidth"===this.settings.forceSize||"fullWindow"===this.settings.forceSize?(this.$slider.css("margin",0),this.$slider.css({width:g(c).width(),"max-width":"",marginLeft:-this.$slider.offset().left})):this.$slider.css({width:this.settings.visibleSize,"max-width":"100%",marginLeft:0}),this.$slidesMask.css("width",this.$slider.width())):("fullWindow"===this.settings.forceSize?this.$slider.css({height:g(c).height(),"max-height":""}):this.$slider.css({height:this.settings.visibleSize,"max-height":"100%"}),this.$slidesMask.css("height",this.$slider.height()))),this._resetSlidesPosition(),this._calculateSlidesSize(),this.trigger({type:"sliderResize"}),g.isFunction(this.settings.sliderResize)&&this.settings.sliderResize.call(this,{type:"sliderResize"}))},_resizeSlides:function(){var s=this.slideWidth,e=this.slideHeight;!0===this.settings.autoSlideSize?"horizontal"===this.settings.orientation?s="auto":"vertical"===this.settings.orientation&&(e="auto"):!0===this.settings.autoHeight&&(e="auto"),g.each(this.slides,function(t,i){i.setSize(s,e)})},_resizeHeight:function(){var t=this.getSlideAt(this.selectedSlideIndex);this._resizeHeightTo(t.getSize().height)},gotoSlide:function(t){if(t!==this.selectedSlideIndex&&void 0!==this.slides[t]){var i=this;this.previousSlideIndex=this.selectedSlideIndex,this.selectedSlideIndex=t,this.$slides.find(".sp-selected").removeClass("sp-selected"),this.$slides.find(".sp-slide").eq(this.selectedSlideIndex).addClass("sp-selected"),!0===this.settings.loop&&(this._updateSlidesOrder(),this._updateSlidesPosition()),!0===this.settings.autoHeight&&this._resizeHeight();var s=!0===this.settings.centerSelectedSlide?Math.round((parseInt(this.$slidesMask.css(this.sizeProperty),10)-this.getSlideAt(this.selectedSlideIndex).getSize()[this.sizeProperty])/2):0,e=-parseInt(this.$slides.find(".sp-slide").eq(this.selectedSlideIndex).css(this.positionProperty),10)+s;this._moveTo(e,!1,function(){i._resetSlidesPosition(),i.trigger({type:"gotoSlideComplete",index:t,previousIndex:i.previousSlideIndex}),g.isFunction(i.settings.gotoSlideComplete)&&i.settings.gotoSlideComplete.call(i,{type:"gotoSlideComplete",index:t,previousIndex:i.previousSlideIndex})}),this.trigger({type:"gotoSlide",index:t,previousIndex:this.previousSlideIndex}),g.isFunction(this.settings.gotoSlide)&&this.settings.gotoSlide.call(this,{type:"gotoSlide",index:t,previousIndex:this.previousSlideIndex})}},nextSlide:function(){var t=this.selectedSlideIndex>=this.getTotalSlides()-1?0:this.selectedSlideIndex+1;this.gotoSlide(t)},previousSlide:function(){var t=this.selectedSlideIndex<=0?this.getTotalSlides()-1:this.selectedSlideIndex-1;this.gotoSlide(t)},_moveTo:function(t,i,s){var e=this,n={};if(t!==this.slidesPosition)if(this.slidesPosition=t,"css-3d"!==this.supportedAnimation&&"css-2d"!==this.supportedAnimation||!1!==this.isIE)n["margin-"+this.positionProperty]=t,void 0!==i&&!0===i?this.$slides.css(n):(this.$slides.addClass("sp-animated"),this.$slides.animate(n,this.settings.slideAnimationDuration,function(){e.$slides.removeClass("sp-animated"),"function"==typeof s&&s()}));else{var o,h="horizontal"===this.settings.orientation?t:0,a="horizontal"===this.settings.orientation?0:t;"css-3d"===this.supportedAnimation?n[this.vendorPrefix+"transform"]="translate3d("+h+"px, "+a+"px, 0)":n[this.vendorPrefix+"transform"]="translate("+h+"px, "+a+"px)",void 0!==i&&!0===i?o="":(this.$slides.addClass("sp-animated"),o=this.vendorPrefix+"transform "+this.settings.slideAnimationDuration/1e3+"s",this.$slides.on(this.transitionEvent,function(t){t.target===t.currentTarget&&(e.$slides.off(e.transitionEvent),e.$slides.removeClass("sp-animated"),"function"==typeof s&&s())})),n[this.vendorPrefix+"transition"]=o,this.$slides.css(n)}},_stopMovement:function(){var t={};if("css-3d"!==this.supportedAnimation&&"css-2d"!==this.supportedAnimation||!1!==this.isIE)this.$slides.stop(),this.slidesPosition=parseInt(this.$slides.css("margin-"+this.positionProperty),10);else{var i=this.$slides.css(this.vendorPrefix+"transform"),s=-1!==i.indexOf("matrix3d")?"matrix3d":"matrix",e=i.replace(s,"").match(/-?[0-9\.]+/g),n="matrix3d"===s?parseInt(e[12],10):parseInt(e[4],10),o="matrix3d"===s?parseInt(e[13],10):parseInt(e[5],10);"css-3d"===this.supportedAnimation?t[this.vendorPrefix+"transform"]="translate3d("+n+"px, "+o+"px, 0)":t[this.vendorPrefix+"transform"]="translate("+n+"px, "+o+"px)",t[this.vendorPrefix+"transition"]="",this.$slides.css(t),this.$slides.off(this.transitionEvent),this.slidesPosition="horizontal"===this.settings.orientation?n:o}this.$slides.removeClass("sp-animated")},_resizeHeightTo:function(t){var i=this,s={height:t};"css-3d"===this.supportedAnimation||"css-2d"===this.supportedAnimation?(s[this.vendorPrefix+"transition"]="height "+this.settings.heightAnimationDuration/1e3+"s",this.$slidesMask.off(this.transitionEvent),this.$slidesMask.on(this.transitionEvent,function(t){t.target===t.currentTarget&&(i.$slidesMask.off(i.transitionEvent),i.trigger({type:"resizeHeightComplete"}),g.isFunction(i.settings.resizeHeightComplete)&&i.settings.resizeHeightComplete.call(i,{type:"resizeHeightComplete"}))}),this.$slidesMask.css(s)):this.$slidesMask.stop().animate(s,this.settings.heightAnimationDuration,function(t){i.trigger({type:"resizeHeightComplete"}),g.isFunction(i.settings.resizeHeightComplete)&&i.settings.resizeHeightComplete.call(i,{type:"resizeHeightComplete"})})},destroy:function(){this.$slider.removeData("sliderPro"),this.$slider.removeAttr("style"),this.$slides.removeAttr("style"),this.off("update."+p),g(c).off("resize."+this.uniqueId+"."+p);var t=g.SliderPro.modules;if(void 0!==t)for(var i=0;i<t.length;i++)void 0!==this["destroy"+t[i]]&&this["destroy"+t[i]]();g.each(this.slides,function(t,i){i.destroy()}),this.slides.length=0,this.$slides.prependTo(this.$slider),this.$slidesContainer.remove()},_setProperties:function(t,i){for(var s in t)this.settings[s]=t[s],!1!==i&&(this.originalSettings[s]=t[s]);this.update()},on:function(t,i){return this.$slider.on(t,i)},off:function(t){return this.$slider.off(t)},trigger:function(t){return this.$slider.triggerHandler(t)},getSlideAt:function(t){return this.slides[t]},getSelectedSlide:function(){return this.selectedSlideIndex},getTotalSlides:function(){return this.slides.length},defaults:{width:500,height:300,responsive:!0,aspectRatio:-1,imageScaleMode:"cover",centerImage:!0,allowScaleUp:!0,autoHeight:!1,autoSlideSize:!1,startSlide:0,shuffle:!1,orientation:"horizontal",forceSize:"none",loop:!0,slideDistance:10,slideAnimationDuration:700,heightAnimationDuration:700,visibleSize:"auto",centerSelectedSlide:!0,rightToLeft:!1,breakpoints:null,init:function(){},update:function(){},sliderResize:function(){},gotoSlide:function(){},gotoSlideComplete:function(){},resizeHeightComplete:function(){},breakpointReach:function(){}}};var n=function(t,i,s){this.$slide=t,this.$mainImage=null,this.$imageContainer=null,this.hasMainImage=!1,this.isMainImageLoaded=!1,this.isMainImageLoading=!1,this.hasImages=!1,this.areImagesLoaded=!1,this.areImagesLoading=!1,this.width=0,this.height=0,this.settings=s,this.setIndex(i),this._init()};n.prototype={_init:function(){this.$slide.attr("data-init",!0),this.$mainImage=0!==this.$slide.find(".sp-image").length?this.$slide.find(".sp-image"):null,null!==this.$mainImage&&(this.hasMainImage=!0,this.$imageContainer=g('<div class="sp-image-container"></div>').prependTo(this.$slide),0!==this.$mainImage.parent("a").length?this.$mainImage.parent("a").appendTo(this.$imageContainer):this.$mainImage.appendTo(this.$imageContainer)),this.hasImages=0!==this.$slide.find("img").length},setSize:function(t,i){this.width=t,this.height=i,this.$slide.css({width:this.width,height:this.height}),!0===this.hasMainImage&&(this.$imageContainer.css({width:this.settings.width,height:this.settings.height}),void 0===this.$mainImage.attr("data-src")&&this.resizeMainImage())},getSize:function(){var t,i=this;if(!0===this.hasImages&&!1===this.areImagesLoaded&&!1===this.areImagesLoading&&(this.areImagesLoading=!0,"complete"!==f.checkImagesStatus(this.$slide)))return f.checkImagesComplete(this.$slide,function(){i.areImagesLoaded=!0,i.areImagesLoading=!1,i.trigger({type:"imagesLoaded."+p,index:i.index})}),{width:this.settings.width,height:this.settings.height};return{width:(t=this.calculateSize()).width,height:t.height}},calculateSize:function(){var h=this.$slide.width(),a=this.$slide.height();return this.$slide.children().each(function(t,i){var s=g(i);if(!0!==s.is(":hidden")){var e=i.getBoundingClientRect(),n=s.position().top+(e.bottom-e.top),o=s.position().left+(e.right-e.left);a<n&&(a=n),h<o&&(h=o)}}),{width:h,height:a}},resizeMainImage:function(t){var i=this;if(!0===t&&(this.isMainImageLoaded=!1,this.isMainImageLoading=!1),!1===this.isMainImageLoaded&&!1===this.isMainImageLoading)return this.isMainImageLoading=!0,void f.checkImagesComplete(this.$mainImage,function(){i.isMainImageLoaded=!0,i.isMainImageLoading=!1,i.resizeMainImage(),i.trigger({type:"imagesLoaded."+p,index:i.index})});this.$imageContainer.css({width:this.width,height:this.height}),!1===this.settings.allowScaleUp&&(this.$mainImage.css({width:"",height:"",maxWidth:"",maxHeight:""}),this.$mainImage.css({maxWidth:this.$mainImage.width(),maxHeight:this.$mainImage.height()})),!0===this.settings.autoSlideSize?"horizontal"===this.settings.orientation?(this.$mainImage.css({width:"auto",height:"100%"}),this.$slide.css("width",this.$mainImage.width())):"vertical"===this.settings.orientation&&(this.$mainImage.css({width:"100%",height:"auto"}),this.$slide.css("height",this.$mainImage.height())):!0===this.settings.autoHeight?this.$mainImage.css({width:"100%",height:"auto"}):("cover"===this.settings.imageScaleMode?this.$mainImage.width()/this.$mainImage.height()<=this.width/this.height?this.$mainImage.css({width:"100%",height:"auto"}):this.$mainImage.css({width:"auto",height:"100%"}):"contain"===this.settings.imageScaleMode?this.$mainImage.width()/this.$mainImage.height()>=this.width/this.height?this.$mainImage.css({width:"100%",height:"auto"}):this.$mainImage.css({width:"auto",height:"100%"}):"exact"===this.settings.imageScaleMode&&this.$mainImage.css({width:"100%",height:"100%"}),!0===this.settings.centerImage&&this.$mainImage.css({marginLeft:.5*(this.$imageContainer.width()-this.$mainImage.width()),marginTop:.5*(this.$imageContainer.height()-this.$mainImage.height())}))},destroy:function(){this.$slide.removeAttr("style"),this.$slide.removeAttr("data-init"),this.$slide.removeAttr("data-index"),this.$slide.removeAttr("data-loaded"),!0===this.hasMainImage&&(this.$slide.find(".sp-image").removeAttr("style").appendTo(this.$slide),this.$slide.find(".sp-image-container").remove())},getIndex:function(){return this.index},setIndex:function(t){this.index=t,this.$slide.attr("data-index",this.index)},on:function(t,i){return this.$slide.on(t,i)},off:function(t){return this.$slide.off(t)},trigger:function(t){return this.$slide.triggerHandler(t)}},c.SliderPro=o,c.SliderProSlide=n,g.fn.sliderPro=function(e){var n=Array.prototype.slice.call(arguments,1);return this.each(function(){if(void 0===g(this).data("sliderPro")){var t=new o(this,e);g(this).data("sliderPro",t)}else if(void 0!==e){var i=g(this).data("sliderPro");if("function"==typeof i[e])i[e].apply(i,n);else if(void 0!==i.settings[e]){var s={};s[e]=n[0],i._setProperties(s)}else"object"==typeof e?i._setProperties(e):g.error(e+" does not exist in sliderPro.")}})};var f={supportedAnimation:null,vendorPrefix:null,transitionEvent:null,isIE:null,getSupportedAnimation:function(){if(null!==this.supportedAnimation)return this.supportedAnimation;var t=(document.body||document.documentElement).style;if(!0===(void 0!==t.transition||void 0!==t.WebkitTransition||void 0!==t.MozTransition||void 0!==t.OTransition)){var i=document.createElement("div");if(void 0===i.style.WebkitPerspective&&void 0===i.style.perspective||(this.supportedAnimation="css-3d"),"css-3d"===this.supportedAnimation&&void 0!==i.styleWebkitPerspective){var s=document.createElement("style");s.textContent="@media (transform-3d),(-webkit-transform-3d){#test-3d{left:9px;position:absolute;height:5px;margin:0;padding:0;border:0;}}",document.getElementsByTagName("head")[0].appendChild(s),i.id="test-3d",document.body.appendChild(i),9===i.offsetLeft&&5===i.offsetHeight||(this.supportedAnimation=null),s.parentNode.removeChild(s),i.parentNode.removeChild(i)}null!==this.supportedAnimation||void 0===i.style["-webkit-transform"]&&void 0===i.style.transform||(this.supportedAnimation="css-2d")}else this.supportedAnimation="javascript";return this.supportedAnimation},getVendorPrefix:function(){if(null!==this.vendorPrefix)return this.vendorPrefix;var t=document.createElement("div"),i=["Webkit","Moz","ms","O"];if("transform"in t.style)return this.vendorPrefix="",this.vendorPrefix;for(var s=0;s<i.length;s++)if(i[s]+"Transform"in t.style){this.vendorPrefix="-"+i[s].toLowerCase()+"-";break}return this.vendorPrefix},getTransitionEvent:function(){if(null!==this.transitionEvent)return this.transitionEvent;var t=document.createElement("div"),i={transition:"transitionend",WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd"};for(var s in i)if(s in t.style){this.transitionEvent=i[s];break}return this.transitionEvent},checkImagesComplete:function(t,i){var s=this,e=this.checkImagesStatus(t);if("loading"===e)var n=setInterval(function(){"complete"===(e=s.checkImagesStatus(t))&&(clearInterval(n),"function"==typeof i&&i())},100);else"function"==typeof i&&i();return e},checkImagesStatus:function(t){var i="complete";return t.is("img")&&!1===t[0].complete?i="loading":t.find("img").each(function(t){!1===g(this)[0].complete&&(i="loading")}),i},checkIE:function(){if(null!==this.isIE)return this.isIE;var t=c.navigator.userAgent;t.indexOf("MSIE");return-1!==t.indexOf("MSIE")||t.match(/Trident.*rv\:11\./)?this.isIE=!0:this.isIE=!1,this.isIE}};c.SliderProUtils=f}(window,jQuery),function(t,n){"use strict";var i="ConditionalImages."+n.SliderPro.namespace,s={previousImageSize:null,currentImageSize:null,isRetinaScreen:!1,initConditionalImages:function(){this.currentImageSize=this.previousImageSize="default",this.isRetinaScreen=void 0!==this._isRetina&&!0===this._isRetina(),this.on("update."+i,n.proxy(this._conditionalImagesOnUpdate,this)),this.on("sliderResize."+i,n.proxy(this._conditionalImagesOnResize,this))},_conditionalImagesOnUpdate:function(){n.each(this.slides,function(t,i){i.$slide.find("img:not([ data-default ])").each(function(){var t=n(this);void 0!==t.attr("data-src")?t.attr("data-default",t.attr("data-src")):t.attr("data-default",t.attr("src"))})})},_conditionalImagesOnResize:function(){if(this.slideWidth<=this.settings.smallSize?this.currentImageSize="small":this.slideWidth<=this.settings.mediumSize?this.currentImageSize="medium":this.slideWidth<=this.settings.largeSize?this.currentImageSize="large":this.currentImageSize="default",this.previousImageSize!==this.currentImageSize){var e=this;n.each(this.slides,function(t,s){s.$slide.find("img").each(function(){var t=n(this),i="";!0===e.isRetinaScreen&&void 0!==t.attr("data-retina"+e.currentImageSize)?(i=t.attr("data-retina"+e.currentImageSize),void 0!==t.attr("data-retina")&&t.attr("data-retina")!==i&&t.attr("data-retina",i)):(!1===e.isRetinaScreen||!0===e.isRetinaScreen&&void 0===t.attr("data-retina"))&&void 0!==t.attr("data-"+e.currentImageSize)&&(i=t.attr("data-"+e.currentImageSize),void 0!==t.attr("data-src")&&t.attr("data-src")!==i&&t.attr("data-src",i)),""!==i&&void 0===t.attr("data-src")&&t.attr("src")!==i&&e._loadConditionalImage(t,i,function(t){t.hasClass("sp-image")&&(s.$mainImage=t,s.resizeMainImage(!0))})})}),this.previousImageSize=this.currentImageSize}},_loadConditionalImage:function(t,i,s){var e=n(new Image);e.attr("class",t.attr("class")),e.attr("style",t.attr("style")),n.each(t.data(),function(t,i){e.attr("data-"+t,i)}),void 0!==t.attr("width")&&e.attr("width",t.attr("width")),void 0!==t.attr("height")&&e.attr("height",t.attr("height")),void 0!==t.attr("alt")&&e.attr("alt",t.attr("alt")),void 0!==t.attr("title")&&e.attr("title",t.attr("title")),e.attr("src",i),e.insertAfter(t),t.remove(),t=null,"function"==typeof s&&s(e)},destroyConditionalImages:function(){this.off("update."+i),this.off("sliderResize."+i)},conditionalImagesDefaults:{smallSize:480,mediumSize:768,largeSize:1024}};n.SliderPro.addModule("ConditionalImages",s)}(window,jQuery),function(t,a){"use strict";var s="TouchSwipe."+a.SliderPro.namespace,i={touchStartPoint:{x:0,y:0},touchEndPoint:{x:0,y:0},touchDistance:{x:0,y:0},touchStartPosition:0,isTouchMoving:!1,touchSwipeEvents:{startEvent:"",moveEvent:"",endEvent:""},allowOppositeScrolling:!0,initTouchSwipe:function(){var i=this;!1!==this.settings.touchSwipe&&(this.touchSwipeEvents.startEvent="touchstart."+s+" mousedown."+s,this.touchSwipeEvents.moveEvent="touchmove."+s+" mousemove."+s,this.touchSwipeEvents.endEvent="touchend."+this.uniqueId+"."+s+" mouseup."+this.uniqueId+"."+s,this.$slidesMask.on(this.touchSwipeEvents.startEvent,a.proxy(this._onTouchStart,this)),this.$slidesMask.on("dragstart."+s,function(t){t.preventDefault()}),this.$slidesMask.find("a").on("click."+s,function(t){void 0===t.originalEvent.touches&&i.$slider.hasClass("sp-swiping")&&t.preventDefault()}),this.$slidesMask.addClass("sp-grab"))},_onTouchStart:function(t){if(!(1<=a(t.target).closest(".sp-selectable").length)){var i=void 0!==t.originalEvent.touches?t.originalEvent.touches[0]:t.originalEvent;this.touchStartPoint.x=i.pageX||i.clientX,this.touchStartPoint.y=i.pageY||i.clientY,this.touchStartPosition=this.slidesPosition,this.touchDistance.x=this.touchDistance.y=0,this.$slides.hasClass("sp-animated")&&(this.isTouchMoving=!0,this._stopMovement(),this.touchStartPosition=this.slidesPosition),a(document).on(this.touchSwipeEvents.moveEvent,a.proxy(this._onTouchMove,this)),a(document).on(this.touchSwipeEvents.endEvent,a.proxy(this._onTouchEnd,this)),this.$slidesMask.removeClass("sp-grab").addClass("sp-grabbing"),this.$slider.addClass("sp-swiping")}},_onTouchMove:function(t){var i=void 0!==t.originalEvent.touches?t.originalEvent.touches[0]:t.originalEvent;this.isTouchMoving=!0,this.touchEndPoint.x=i.pageX||i.clientX,this.touchEndPoint.y=i.pageY||i.clientY,this.touchDistance.x=this.touchEndPoint.x-this.touchStartPoint.x,this.touchDistance.y=this.touchEndPoint.y-this.touchStartPoint.y;var s="horizontal"===this.settings.orientation?this.touchDistance.x:this.touchDistance.y,e="horizontal"===this.settings.orientation?this.touchDistance.y:this.touchDistance.x;Math.abs(s)>Math.abs(e)&&(this.allowOppositeScrolling=!1),!0!==this.allowOppositeScrolling&&(t.preventDefault(),!1===this.settings.loop&&(this.slidesPosition>this.touchStartPosition&&0===this.selectedSlideIndex||this.slidesPosition<this.touchStartPosition&&this.selectedSlideIndex===this.getTotalSlides()-1)&&(s*=.2),this._moveTo(this.touchStartPosition+s,!0))},_onTouchEnd:function(t){var i=this,s="horizontal"===this.settings.orientation?this.touchDistance.x:this.touchDistance.y;if(a(document).off(this.touchSwipeEvents.moveEvent),a(document).off(this.touchSwipeEvents.endEvent),this.allowOppositeScrolling=!0,this.$slidesMask.removeClass("sp-grabbing").addClass("sp-grab"),(!1===this.isTouchMoving||!0===this.isTouchMoving&&Math.abs(this.touchDistance.x)<10&&Math.abs(this.touchDistance.y)<10)&&this.$slider.removeClass("sp-swiping"),setTimeout(function(){i.$slider.removeClass("sp-swiping")},1),!1!==this.isTouchMoving){var e=!(this.isTouchMoving=!1)===this.settings.centerSelectedSlide?Math.round((parseInt(this.$slidesMask.css(this.sizeProperty),10)-this.getSlideAt(this.selectedSlideIndex).getSize()[this.sizeProperty])/2):0,n=-parseInt(this.$slides.find(".sp-slide").eq(this.selectedSlideIndex).css(this.positionProperty),10)+e;if(Math.abs(s)<this.settings.touchSwipeThreshold)this._moveTo(n);else{var o=(!0===this.settings.rightToLeft&&"horizontal"===this.settings.orientation?-1:1)*s/(this.averageSlideSize+this.settings.slideDistance);o=parseInt(o,10)+(0<o?1:-1);var h=this.slidesOrder[a.inArray(this.selectedSlideIndex,this.slidesOrder)-o];!0===this.settings.loop?this.gotoSlide(h):void 0!==h?this.gotoSlide(h):this._moveTo(n)}}},destroyTouchSwipe:function(){this.$slidesMask.off("dragstart."+s),this.$slidesMask.find("a").off("click."+s),this.$slidesMask.off(this.touchSwipeEvents.startEvent),a(document).off(this.touchSwipeEvents.moveEvent),a(document).off(this.touchSwipeEvents.endEvent),this.$slidesMask.removeClass("sp-grab")},touchSwipeDefaults:{touchSwipe:!0,touchSwipeThreshold:50}};a.SliderPro.addModule("TouchSwipe",i)}(window,jQuery),function(t,i){"use strict";var s="Autoplay."+i.SliderPro.namespace,e={autoplayTimer:null,isTimerRunning:!1,isTimerPaused:!1,initAutoplay:function(){this.on("update."+s,i.proxy(this._autoplayOnUpdate,this))},_autoplayOnUpdate:function(t){!0===this.settings.autoplay?(this.on("gotoSlide."+s,i.proxy(this._autoplayOnGotoSlide,this)),this.on("mouseenter."+s,i.proxy(this._autoplayOnMouseEnter,this)),this.on("mouseleave."+s,i.proxy(this._autoplayOnMouseLeave,this)),this.startAutoplay()):(this.off("gotoSlide."+s),this.off("mouseenter."+s),this.off("mouseleave."+s),this.stopAutoplay())},_autoplayOnGotoSlide:function(t){!0===this.isTimerRunning&&this.stopAutoplay(),!1===this.isTimerPaused&&this.startAutoplay()},_autoplayOnMouseEnter:function(t){!this.isTimerRunning||"pause"!==this.settings.autoplayOnHover&&"stop"!==this.settings.autoplayOnHover||(this.stopAutoplay(),this.isTimerPaused=!0)},_autoplayOnMouseLeave:function(t){!0===this.settings.autoplay&&!1===this.isTimerRunning&&"stop"!==this.settings.autoplayOnHover&&(this.startAutoplay(),this.isTimerPaused=!1)},startAutoplay:function(){var t=this;this.isTimerRunning=!0,this.autoplayTimer=setTimeout(function(){"normal"===t.settings.autoplayDirection?t.nextSlide():"backwards"===t.settings.autoplayDirection&&t.previousSlide()},this.settings.autoplayDelay)},stopAutoplay:function(){this.isTimerRunning=!1,this.isTimerPaused=!1,clearTimeout(this.autoplayTimer)},destroyAutoplay:function(){clearTimeout(this.autoplayTimer),this.off("update."+s),this.off("gotoSlide."+s),this.off("mouseenter."+s),this.off("mouseleave."+s)},autoplayDefaults:{autoplay:!0,autoplayDelay:5e3,autoplayDirection:"normal",autoplayOnHover:"pause"}};i.SliderPro.addModule("Autoplay",e)}(window,jQuery),function(t,s){"use strict";var e="Buttons."+s.SliderPro.namespace,i={$buttons:null,initButtons:function(){this.on("update."+e,s.proxy(this._buttonsOnUpdate,this))},_buttonsOnUpdate:function(){this.$buttons=this.$slider.find(".sp-buttons"),!0===this.settings.buttons&&1<this.getTotalSlides()&&0===this.$buttons.length?this._createButtons():!0===this.settings.buttons&&this.getTotalSlides()!==this.$buttons.find(".sp-button").length&&0!==this.$buttons.length?this._adjustButtons():(!1===this.settings.buttons||this.getTotalSlides()<=1&&0!==this.$buttons.length)&&this._removeButtons()},_createButtons:function(){var i=this;this.$buttons=s('<div class="sp-buttons"></div>').appendTo(this.$slider);for(var t=0;t<this.getTotalSlides();t++)s('<div class="sp-button"></div>').appendTo(this.$buttons);this.$buttons.on("click."+e,".sp-button",function(){i.gotoSlide(s(this).index())}),this.$buttons.find(".sp-button").eq(this.selectedSlideIndex).addClass("sp-selected-button"),this.on("gotoSlide."+e,function(t){i.$buttons.find(".sp-selected-button").removeClass("sp-selected-button"),i.$buttons.find(".sp-button").eq(t.index).addClass("sp-selected-button")}),this.$slider.addClass("sp-has-buttons")},_adjustButtons:function(){this.$buttons.empty();for(var t=0;t<this.getTotalSlides();t++)s('<div class="sp-button"></div>').appendTo(this.$buttons);this.$buttons.find(".sp-selected-button").removeClass("sp-selected-button"),this.$buttons.find(".sp-button").eq(this.selectedSlideIndex).addClass("sp-selected-button")},_removeButtons:function(){this.$buttons.off("click."+e,".sp-button"),this.off("gotoSlide."+e),this.$buttons.remove(),this.$slider.removeClass("sp-has-buttons")},destroyButtons:function(){this._removeButtons(),this.off("update."+e)},buttonsDefaults:{buttons:!0}};s.SliderPro.addModule("Buttons",i)}(window,jQuery),function(t,i){"use strict";var s="Arrows."+i.SliderPro.namespace,e={$arrows:null,$previousArrow:null,$nextArrow:null,initArrows:function(){this.on("update."+s,i.proxy(this._arrowsOnUpdate,this)),this.on("gotoSlide."+s,i.proxy(this._checkArrowsVisibility,this))},_arrowsOnUpdate:function(){var t=this;!0===this.settings.arrows&&null===this.$arrows?(this.$arrows=i('<div class="sp-arrows"></div>').appendTo(this.$slidesContainer),this.$previousArrow=i('<div class="sp-arrow sp-previous-arrow"></div>').appendTo(this.$arrows),this.$nextArrow=i('<div class="sp-arrow sp-next-arrow"></div>').appendTo(this.$arrows),this.$previousArrow.on("click."+s,function(){t.previousSlide()}),this.$nextArrow.on("click."+s,function(){t.nextSlide()}),this._checkArrowsVisibility()):!1===this.settings.arrows&&null!==this.$arrows&&this._removeArrows(),!0===this.settings.arrows&&(!0===this.settings.fadeArrows?this.$arrows.addClass("sp-fade-arrows"):!1===this.settings.fadeArrows&&this.$arrows.removeClass("sp-fade-arrows"))},_checkArrowsVisibility:function(){!1!==this.settings.arrows&&!0!==this.settings.loop&&(0===this.selectedSlideIndex?this.$previousArrow.css("display","none"):this.$previousArrow.css("display","block"),this.selectedSlideIndex===this.getTotalSlides()-1?this.$nextArrow.css("display","none"):this.$nextArrow.css("display","block"))},_removeArrows:function(){null!==this.$arrows&&(this.$previousArrow.off("click."+s),this.$nextArrow.off("click."+s),this.$arrows.remove(),this.$arrows=null)},destroyArrows:function(){this._removeArrows(),this.off("update."+s),this.off("gotoSlide."+s)},arrowsDefaults:{arrows:!1,fadeArrows:!0}};i.SliderPro.addModule("Arrows",e)}(window,jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
